1. Remove unused imports to improve code readability and reduce clutter.
2. Consider consolidating the multiple `withCompressionType` methods into a single method that handles both deprecated and non-deprecated cases.
3. Extract repeated logic in the `expand` methods of `TypedWrite` and `Write` classes into a private helper method to reduce duplication.
4. Use `Optional` instead of nullable types where applicable to improve null safety and readability.
5. Consider using a more descriptive name for the `CreateTextSourceFn` class to clarify its purpose.
6. Refactor the `isSelfOverlapping` method to use a more efficient algorithm or a library method if available.
7. Consider using constants for magic numbers like `64 * 1024 * 1024L` for better readability.
8. Remove the `@SuppressWarnings("mutable")` annotations if they are not necessary, as they can obscure potential issues.
9. Consider adding more comments or JavaDoc to clarify the purpose of complex methods and classes.
10. Group related methods together (e.g., all `with` methods) to improve code organization and readability.